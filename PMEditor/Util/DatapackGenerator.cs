using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace PMEditor.Util
{
    public class DatapackGenerator
    {

        DirectoryInfo target;
        string trackID;

        private DatapackGenerator(DirectoryInfo target, string trackID)
        {
            this.target = target;
            this.trackID = trackID;
        }

        public void WriteFunction(int time, int frame, IEnumerable<string> lines)
        {
            File.WriteAllLines(target.FullName + $"\\data\\{trackID}\\functions\\{time}\\frames\\{frame}.mcfunction", lines);
        }

        public void WriteInitFunction(int time, IEnumerable<string> lines)
        {
            File.WriteAllLines(target.FullName + $"\\data\\{trackID}\\functions\\{time}\\init.mcfunction", lines);
        }

        public FileInfo? CreateFrameFunction(string name)
        {
            FileInfo file = new (target.FullName + $"\\data\\{trackID}\\functions\\frame_functions\\{name}.mcfunction");
            if(file.Exists)
            {
                return null;
            }
            file.Create().Close();
            return file;
        }

        public FileInfo GetFrameFunction(string name)
        {
            return new(target.FullName + $"\\data\\{trackID}\\functions\\frame_functions\\{name}.mcfunction");
        }

        public static DatapackGenerator CreateDatapack(DirectoryInfo target, string trackID)
        {
            if(target.Exists)
            {
                target.Delete(true);
            }
            target.Create();
            trackID = ToLegalIdentifier(trackID);
            //pack.mcmeta
            File.WriteAllText(target.FullName + "\\pack.mcmeta", 
                "{\n" +
                "  \"pack\": {\n" +
                "    \"pack_format\": 42,\n" +
                "    \"description\": \"Generated by PMEditor\"\n" +
                "  }\n" +
                "}");
            target.CreateSubdirectory("data");
            target.CreateSubdirectory($"data\\{trackID}");
            target.CreateSubdirectory($"data\\{trackID}\\functions");
            target.CreateSubdirectory($"data\\{trackID}\\functions\\frame_functions");
            target.CreateSubdirectory($"data\\{trackID}\\functions\\20");
            target.CreateSubdirectory($"data\\{trackID}\\functions\\60");
            target.CreateSubdirectory($"data\\{trackID}\\functions\\20\\frames");
            target.CreateSubdirectory($"data\\{trackID}\\functions\\60\\frames");

            return new DatapackGenerator(target, trackID);
        }

        public static string ToLegalIdentifier(string str)
        {
            StringBuilder s = new("");
            foreach (var c in str)
            {
                if (char.IsLower(c) || char.IsDigit(c) || c == '_' || c == '-' || c == '.')
                {
                    s.Append(c);
                }
                else if (char.IsUpper(c))
                {
                    s.Append('_').Append(char.ToLower(c));
                }
                else
                {
                    s.Append('u').Append(((int)c).ToString("X"));
                }
            }
            return s.ToString();
        }
    }
}
